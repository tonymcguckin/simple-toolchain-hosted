version: '2'

messages:
  $i18n: locales.yml

template:
  name:
    $ref: "$env.byoc_name === undefined ? '#/messages/template.name' : '#/messages/template.byoc_name'"

  description:
    $ref: "#/messages/template.description"

  getting_started:
      $ref: "#/messages/template.description"
#  info:
#    git url: >-
#      $env.repository ? '[' + $env.repository + '](' + $env.repository + ')' : "[https://github.com/tonymcguckin/simple-toolchain-hosted](https://github.com/tonymcguckin/simple-toolchain-hosted)"
#    git branch: >-
#      $env.repository && $env.branch ? '[' + $env.branch + ']('+ $env.repository + '/tree/' + $env.branch + ')': "[flavour3](https://github.com/tonymcguckin/simple-toolchain-hosted/tree/flavour3)"

toolchain:
  name: $$env.byoc_name

services:
  sample-repo:
    $switch:
      - $expr: hostedgit
      
      #- $default: hostedgit
      
      #- $case: githubpublic
      #  service_id: githubpublic
      #  parameters: {}
        
      - $case: hostedgit
        service_id: hostedgit
        parameters:
  #        t1: "{{form.pipeline.parameters.env_id}}"
  
          t2: "{ a: $env.branch, b: $env.app_name }"
          t3: "[ $env.branch, $env.app_name ]"
          
          t4: "$env.createObject(999.997766)"
          t5: "$env.createObject(true, 'mykey')"
          t6: "$env.createObject({ a: $env.byoc_name })"
          t7: "$$env.createObject({ x: $$env.byoc_name, y: true })"
          
          t8: "$env.load('params.dyml')"
          #t9: "$env.load('params.dyml', 'services.sample-repo.$switch.1.parameters.p0')"
          t10: "$env.load('params.dyml', 'services.sample-build.parameters.configuration.env.schedule')"
          t11: "$env.load('params.dyml', 'form.pipeline.parameters.env')"
          
          t12: $env.byoc_name
          t13: $$env.byoc_name
          t14: $env.byoc_name || 55.44
          t15: $$env.byoc_name || 66.77
          
          t16: "if($env.byoc_name == 'foobar1') $env.branch; else '{{repository}}';"
          t17: "if($env.byoc_name == 'foobar2'){ $env.branch; } else if($env.byoc_name == 'hello'){ 999; };"
        
          #bucket1: "{{form.pipeline.parameters}}" 
          #bucket2: "{{form.pipeline.schema}}" 
          #bucket3: "{{form.pipeline}}"
          #bucket4: "{{form}}"
          #bucket5: "{{template.name}}"
          #bucket6: "{{template}}"

  sample-build:
    service_id: pipeline
    parameters:
      services:
        - sample-repo
      name: '{{services.sample-repo.parameters.repo_name}}'
      ui-pipeline: true
      configuration:
        content:
          $text: pipeline.yml
        env:
          SAMPLE_REPO: $env.byoc_name
          SAMPLE_REPO1: $$env.byoc_name
          SAMPLE_REPO2: "if($env.env === 'eu'){ $env.load('build-eu.dyml'); } else { 'non_eu_env' }"
          CF_APP_NAME: $env.byoc_name || '{{form.pipeline.parameters.prod-app-name}}'
          PROD_SPACE_NAME: $env.prod_space || '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: $env.prod_org || '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: $env.prod_region || '{{form.pipeline.parameters.prod-region}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
        execute: true

  webide:
    service_id: orion

form:
  pipeline:
    parameters:
      env_key: "if($env.env_key !== undefined){ 'eu' } else { 'usa' }"
    schema:
      $ref: deploy.json
