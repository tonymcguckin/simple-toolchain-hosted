version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    #original static description:
    #$ref: "#/messages/template.description"
    #template descriptions now vary depending on the flavor of source provider selected
    $ref: >
      $env.source_provider === 'githubconsolidated' ? 
      '#/messages/template.description.github' : '#/messages/template.description'
  header: '![](toolchain.svg?localize)'
  icon: icon.svg
  required:
    - sample-build
    - sample-repo
    - tmg-kp-integration
    - artifactory
  info:
    #original static git url and branch string definitions
    #git url: >-
    #  [https://github.com/open-toolchain/simple-toolchain-hosted](https://github.com/open-toolchain/simple-toolchain-hosted)
    #git branch: >-
    #  [master](https://github.com/open-toolchain/simple-toolchain-hosted/tree/master)
    
    # compute the git url and branch values dynamically so that they remain correct when repo is forked etc. 
    # note: `repository` url param must always be provided while the `branch` url param is optional
    # the computed urls are of the same format as the original static urls shown above
    git url: >
        '[' + $env.repository + '](' + $env.repository + ')'
    git branch: >
        $env.branch ?
          '[' + $env.branch + ']('+ $env.repository + '/tree/' + $env.branch + ')' :
          '[master]('+ $env.repository + '/tree/master)'
toolchain:
  name: >
    $env.toolchainName ? '{{toolchainName}}' :
      'simple-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  tmg-kp-integration:
    service_id: keyprotect
    parameters:
      name: tmg-kp-integration
      region: us-south
      resource-group: default
      instance-name: tmg-kp-1
  sample-repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: '{{toolchain.name}}'
      repo_url: >
        $env.type === 'link' ? $env.app_repo :
          $env.sourceZipUrl ? '{{sourceZipUrl}}' :
            'https://github.com/open-toolchain/node-hello-world'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ? $env.app_repo :
          $env.sourceZipUrl ? '{{sourceZipUrl}}' : 'https://github.com/open-toolchain/node-hello-world'
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: true
  sample-build:
    service_id: pipeline
    parameters:
      services:
        - sample-repo
      name: '{{services.sample-repo.parameters.repo_name}}'
      ui_pipeline: true
      configuration:
        content:
          $text: pipeline.yml
        env:
          SAMPLE_REPO: sample-repo
          SECREF1: "{kp::us-south.default.tmg-kp-1.master-apikey}"
          SECREF2: "{vti::tmg-kp-integration.master-apikey}"
          CF_APP_NAME: '{{form.pipeline.parameters.prod-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
        execute: true
  webide:
    service_id: orion
  #artifactory:
    #service_id: artifactory
    #parameters:
      #dashboard_url: "https://na.artifactory.swg-devops.com/artifactory/webapp/"
      #name: artifactory1
      #token: "{vault::tmg-kp-integration.master-apikey}"
form:
  pipeline:
    parameters:
      prod-app-name: >
        $env.prodAppName ?
          '{{prodAppName}}' : '{{services.sample-repo.parameters.repo_name}}'
      prod-space: '{{prodSpace}}'
      prod-organization: '{{prodOrganization}}'
      prod-region: '{{prodRegion}}'
      api-key: '{vault::tmg-kp-integration.master-apikey}'
    schema:
      $ref: deploy.json
